language: rust
sudo: required
rust:
  - nightly
  - nightly-2018-03-04
  # lo-migrate currently depends on nightly features
  # - beta
  # - stable
env:
  global:
    - RUST_BACKTRACE=1
  matrix:
    # adjust condition in after_success too!
    - >
      CEPH_IMAGE=ceph/demo:latest
      PG_IMAGE=postgres:latest

     # broken in nightl, https://github.com/rust-lang/rust/issues/47309
     # RUSTFLAGS="-C link-dead-code"
    -  >
      CEPH_IMAGE=ceph/demo:tag-build-master-kraken-centos-7
      PG_IMAGE=postgres:9.6
    - >
      CEPH_IMAGE=ceph/demo:tag-build-master-jewel-ubuntu-16.04
      PG_IMAGE=postgres:9.5
before_install:
  - sudo sh -c 'echo "address=/localhost/127.0.0.1" >/etc/dnsmasq.d/localhost.conf' && sudo service dnsmasq restart
  - docker run -d -e CEPH_DEMO_ACCESS_KEY=access_key -e CEPH_DEMO_SECRET_KEY=secret_key -e CEPH_DEMO_UID=demo_uid  -e MON_IP=127.0.0.1 -e CEPH_PUBLIC_NETWORK=0.0.0.0/0 --hostname=localhost -p 8080:80 $CEPH_IMAGE
  - docker run -d -p 5432 $PG_IMAGE
  - while ! [[ $(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/) =~ ^200|404$ ]]; do sleep 1; done
  - while ! pg_isready -h localhost; do sleep 1; done
addons:
  apt:
    packages:
      - dnsmasq

      # code coverage
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev
      - zlib1g-dev
services:
  - docker
script:
  # build without clippy (not on nightly)
  - '[[ "$TRAVIS_RUST_VERSION" = "nightly" ]] || cargo rustc --no-default-features --features "integer_atomics" --lib -- -D warnings'
  - '[[ "$TRAVIS_RUST_VERSION" = "nightly" ]] || cargo rustc --lib -- -D warnings'
  - '[[ "$TRAVIS_RUST_VERSION" = "nightly" ]] || cargo rustc --bin lo_migrate_cli -- -D warnings'

  # build using clippy (only on nightly)
  - 'rm rust-toolchain'
  - '[[ "$TRAVIS_RUST_VERSION" != "nightly" ]] || cargo update -p clippy'
  - '[[ "$TRAVIS_RUST_VERSION" != "nightly" ]] || cargo rustc --no-default-features --features "integer_atomics clippy" --lib -- -D warnings'
  - '[[ "$TRAVIS_RUST_VERSION" != "nightly" ]] || cargo rustc --features clippy --lib -- -D warnings'
  - '[[ "$TRAVIS_RUST_VERSION" != "nightly" ]] || cargo rustc --features clippy --bin lo_migrate_cli -- -D warnings'

  # run tests
  - cargo test --no-fail-fast --no-default-features --features "travis_tests integer_atomics"
  - cargo test --no-fail-fast --features travis_tests
after_success:
  - cat Cargo.lock
  - |
    # code coverage
    if [[ "$TRAVIS_RUST_VERSION" = "nightly" && "$CEPH_IMAGE" = "ceph/demo:latest" && "$PG_IMAGE" = "postgres:latest" ]]; then
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
        tar xzf master.tar.gz &&
        cd kcov-master &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install &&
        cd ../.. &&
        rm -rf kcov-master &&
        for file in target/debug/*-[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]; do
            mkdir -p "target/cov/$(basename $file)" || err=true
            kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file" || err=true;
        done &&
        [[ "${err-}" != "true" ]] &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
    fi

matrix:
  allow_failures:
    - rust: nightly
